package com.chenming.poi.POIOperate_01_basic;

import java.io.File;
import java.io.IOException;

import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.junit.Test;

import junit.framework.TestCase;

/**
 * 这个类是测试打开Excel(Workbook对象)的操作
 * 打开已有的Excel,有三种方式：使用WorkbookFactory、POIFSFi了System以及new的方式,并且Excel也有两种格式
 * 本类主要是测试用WorkbookFactory打开已有的Excel
 * @author 陈明
 * @date   2018年8月5日
 */
public class Basic_01_ExcelOpenTest_1 extends TestCase
{
	
	/**
	 * 打开已有Excel的三种方式之一：
	 * 测试用WorkbookFactory对象打开已有的Excel
	 * 	这个方法是通用 .xls 和 .xlsx 格式的Excel文件
	 * @throws IOException 
	 * @throws InvalidFormatException 
	 * @throws EncryptedDocumentException 
	 */
	@Test
	public void testOpenExcelForCommonUsingWBF() throws EncryptedDocumentException, InvalidFormatException, IOException {
		File file1 = new File("F:\\GitReponsitory\\Note\\Note\\后端\\知识点\\POI\\知识点\\POI测试文件夹\\read\\1.xls");
		Workbook wb1 = WorkbookFactory.create(file1);
		System.out.println(wb1);  //org.apache.poi.hssf.usermodel.HSSFWorkbook@6b09bb57
		System.out.println(wb1.getClass());  //class org.apache.poi.hssf.usermodel.HSSFWorkbook
		
		File file2 = new File("F:\\GitReponsitory\\Note\\Note\\后端\\知识点\\POI\\知识点\\POI测试文件夹\\read\\1.xlsx");
		Workbook wb2 = WorkbookFactory.create(file2);
		System.out.println(wb2);  //Name: /xl/workbook.xml - Content Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml
		System.out.println(wb2.getClass());  //class org.apache.poi.xssf.usermodel.XSSFWorkbook
		
		/**
		 * 根据Excel文件的格式,强转为对应的Workbook对象
		 */
		//1. 将 .xls 格式的强转为 HSSFWorkbook对象
		HSSFWorkbook hwb = (HSSFWorkbook)WorkbookFactory.create(file1);
		System.out.println(hwb.getClass()); //class org.apache.poi.hssf.usermodel.HSSFWorkbook
		
		//2. 将 .xlsx 格式的强转为 XSSFWorkbook
		XSSFWorkbook xwb = (XSSFWorkbook)WorkbookFactory.create(file2);
		System.out.println(xwb.getClass()); //class org.apache.poi.xssf.usermodel.XSSFWorkbook
	}
	
	/**
	 * 打开已有Excel的三种方式之一：
	 * 测试用WorkbookFactory对象打开已有的Excel
	 * 	这个方法专门用于测试打开 .xls 格式的Excel文件
	 * @throws IOException 
	 * @throws InvalidFormatException 
	 * @throws EncryptedDocumentException 
	 */
	@Test
	public void testOpenExcelForXLSUsingWBF() throws EncryptedDocumentException, InvalidFormatException, IOException {
		File file1 = new File("F:\\GitReponsitory\\Note\\Note\\后端\\知识点\\POI\\知识点\\POI测试文件夹\\read\\1.xls");
		HSSFWorkbook hwb = (HSSFWorkbook)WorkbookFactory.create(file1);
		System.out.println(hwb.getClass());  //class org.apache.poi.hssf.usermodel.HSSFWorkbook
	}
	
	/**
	 * 打开已有Excel的三种方式之一：
	 * 测试用WorkbookFactory对象打开已有的Excel
	 * 	这个方法专门用于测试打开 .xlsx 格式的Excel文件
	 * @throws IOException 
	 * @throws InvalidFormatException 
	 * @throws EncryptedDocumentException 
	 */
	@Test
	public void testOpenExcelForXLSXUsingWBF() throws EncryptedDocumentException, InvalidFormatException, IOException {
		File file2 = new File("F:\\GitReponsitory\\Note\\Note\\后端\\知识点\\POI\\知识点\\POI测试文件夹\\read\\1.xlsx");
		XSSFWorkbook xwb = (XSSFWorkbook) WorkbookFactory.create(file2);
		System.out.println(xwb.getClass());
	}
}
