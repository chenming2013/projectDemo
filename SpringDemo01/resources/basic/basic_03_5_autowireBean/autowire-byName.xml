<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"     
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"           
<<<<<<< HEAD
    xmlns:context="http://www.springframework.org/schema/context"   
    xmlns:aop="http://www.springframework.org/schema/aop"       
    xmlns:tx="http://www.springframework.org/schema/tx"         
    xmlns:util="http://www.springframework.org/schema/util"         
    xmlns:p="http://www.springframework.org/schema/p"               
    xsi:schemaLocation="http://www.springframework.org/schema/beans                             
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd        
                        http://www.springframework.org/schema/context                           
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd    
                        http://www.springframework.org/schema/aop                               
                        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                        http://www.springframework.org/schema/tx                            
                        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd                      
                        http://www.springframework.org/schema/util                          
                        http://www.springframework.org/schema/util/spring-util-4.0.xsd">
=======
    xsi:schemaLocation="http://www.springframework.org/schema/beans                             
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">
>>>>>>> 9a23723de0eac87773e4ba0adc56ee6ecbc22f3e
	
	
	<!-- 测试 byName 方式自动装配 -->
	<!--  
		因为HelloApiDecorator这个Bean设置了 autowire="byname",所以在创建完了这个Bean之后,
		就会使用setter的方法为HelloApiDecorator Bean的属性注入依赖:
			1)找到 HelloApiDecorator Bean中有helloApi属性,在容器中找id为 "helloApi" 的Bean, 
				1.如果没找到就不注入依赖。
				2.如果找到有 id="helloApi" 的Bean,就试图将该Bean注入HelloApiDecorator的helloApi属性中:
					①如果找到的Bean与helloApi属性的类型相同,或者是helloApi属性的类型的子类,那么就能够正确注入;
						否则就抛出转换异常:ConversionNotSupportedException
			2)对于HelloApiDecorator的message属性,也是执行同样的操作。
	-->
	
<<<<<<< HEAD
	<bean id="helloApi" class="basic.basic_04_2_autowireBean.bean.HelloImpl"/>
    <!-- 通过构造器注入 -->
    <bean id="bean" 
          class="basic.basic_04_2_autowireBean.bean.HelloApiDecorator" 
=======
	<bean id="helloApi" class="basic.basic_03_5_autowireBean.bean.HelloImpl"/>
    <!-- 通过Setter注入: 首先调用HelloApiDecorator的无参构造函数来实例化HelloApiDecorator对象,然后使用Setter方式进行装配 -->
    <bean id="bean" 
          class="basic.basic_03_5_autowireBean.bean.HelloApiDecorator" 
>>>>>>> 9a23723de0eac87773e4ba0adc56ee6ecbc22f3e
          autowire="byName"/>
	
</beans>