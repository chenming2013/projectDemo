<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
           
	<!-- 配置目标对象 -->
	<bean id="businessService" class="basic.basic_06_2_aop_advice.service.BusinessServiceImpl"></bean>
	
	<!-- 配置通知响应类 -->
	<bean id="businessAspect" class="basic.basic_06_2_aop_advice.aop.BusinessAspect"></bean>
	<!-- 配置切面,切面是由切入点和通知响应类组成 -->
	<aop:config>
		<!-- 配置公用切入点 -->
		<aop:pointcut expression="execution(* basic.basic_06_2_aop_advice..*.*(..))" id="public_pointcut1"/>
		
		<!-- 将切面映射到通知响应类 -->
		<aop:aspect ref="businessAspect">
			<!-- 配置这个切面私有的切入点 -->
			<!-- 将baisc/basic_06_2_aop_advice/service包下的所有方法都定义为切入点 -->
			<aop:pointcut id="private_pointcut_1" expression="execution(* basic.basic_06_2_aop_advice.service.**.*(..))" />
			<!-- 将basic/basic_06_2_aop_advice/service包下的所有 doBusiness_2 方法都定义为切入点,并将doBusiness_2()方法的入参传递给通知方法 -->
			<aop:pointcut id="private_pointcut_2" expression="execution(* basic.basic_06_2_aop_advice.service.**.doBusiness_2(..)) and args(str)" />
			<!-- 将basic/basic_06_2_aop_advice/service包下的所有 doBusiness_3 方法都定义为切入点 -->
			<!-- 注意: 这里的方法是不能带参数的,不能加上 and args(str) -->
			<aop:pointcut id="private_pointcut_3" expression="execution(* basic.basic_06_2_aop_advice.service.**.doBusiness_3(..))" />
			<!-- 将basic/basic_06_2_aop_advice/service包下的所有 doBusiness_4 方法都定义为切入点 -->
			<aop:pointcut id="private_pointcut_4" expression="execution(* basic.basic_06_2_aop_advice.service.BusinessServiceImpl.doBusiness_4(..))" />
			
			<!-- 配置前置通知 -->
		 	<!-- 为 baisc/basic_06_2_aop_advice/service包下的所有方法都配置beforeAdvice这个前置通知-->
			<aop:before pointcut-ref="private_pointcut_1" method="beforeAdvice"></aop:before>
			<!-- 为 baisc/basic_06_2_aop_advice/service包下的所有 doBusiness 方法都配置beforeAdvice_2这个前置通知,这个方法的参数就是传递给service方法的参数 -->
			<aop:before pointcut-ref="private_pointcut_2" method="beforeAdvice_2" arg-names="str"></aop:before>
			
			
			<!-- 配置后置返回通知 -->
			<aop:after-returning method="afterReturningAdvice" pointcut-ref="private_pointcut_3"/>
			<aop:after-returning method="afterReturningAdvice_2" pointcut-ref="private_pointcut_3" arg-names="str" returning="str"/>
			
			
			<!-- 配置后置异常通知 -->
			<aop:after-throwing method="afterThrowingAdvice" pointcut-ref="private_pointcut_4" arg-names="e" throwing="e"/>
			
			
			<!-- 配置后置通知 -->
			<aop:after method="afterAdvice" pointcut-ref="private_pointcut_1"/>
			<aop:after method="afterAdvice_2" pointcut-ref="private_pointcut_2" arg-names="str"/>
			
			
			<!-- 配置环绕通知 -->
			<aop:around method="roundAdvice" pointcut="execution(* basic.basic_06_2_aop_advice.service.BusinessServiceImpl.doBusiness_5(..))" />
			
		</aop:aspect>
	</aop:config>
	
</beans>