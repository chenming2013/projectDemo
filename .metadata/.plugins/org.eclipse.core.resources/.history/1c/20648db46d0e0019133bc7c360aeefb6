package com.chenming.encrypt;

import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.security.spec.InvalidKeySpecException;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESKeySpec;
import javax.xml.bind.annotation.adapters.HexBinaryAdapter;

import org.junit.Test;

/**
 * 测试DES加密解密
 * 	DES是对称加密,所谓对称加密算法,即: 加密和解密使用相同的密钥
 * 
 * 	注意: 密钥必须是8字节,如"cm12345678";如果指定的密钥长度大于8字节,那么只取前8位;如果指定的密钥长度小于8字节,会报错。
 * 
 * @author 陈明
 * @date 2019年1月2日
 */
public class DESTest {
	
	private static final String DES_KEY = "cm12345678";
	
	/**
	 * DES加密
	 */
	@Test
	public void encrypt() throws InvalidKeyException, NoSuchAlgorithmException, InvalidKeySpecException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException {
		//要加密的数据
		String data = "helloworld";
		//秘钥
		String key = DES_KEY;
		
		//DES算法要求有一个可信任的随机数源
		SecureRandom random = new SecureRandom();
		
		DESKeySpec desKeySpec = new DESKeySpec(key.getBytes());
		
		//创建一个密钥工厂,然后用它把DESKeySpec转换成Securekey
		SecretKeyFactory keyFactory = SecretKeyFactory.getInstance("DES");
		SecretKey secretKey = keyFactory.generateSecret(desKeySpec);
		
		//Cipher对象实际完成加密操作
		Cipher cipher = Cipher.getInstance("DES");
		//用秘钥初始化Cipher对象
		cipher.init(Cipher.ENCRYPT_MODE, secretKey,random);
		
		//加密
		byte[] bytes = cipher.doFinal(data.getBytes());
		
		System.out.println(new HexBinaryAdapter().marshal(bytes));	//A293E0BE5BA23D394EB3460786E85BBA
	}

	/**
	 * DES解密
	 */
	@Test
	public void decrpt() {
		//要解密的数据
		String data = "FF03E94589EEDF3C476974B361D833F2";
		//密钥
		String key = DES_KEY;
		
		//DES算法要求一个可信任的随机算法
		SecureRandom randow = new SecureRandom();
		
		
				
	}
	
}
