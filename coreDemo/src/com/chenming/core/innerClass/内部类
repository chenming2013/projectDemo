一、内部类：定义在一个类里面的类
        
        内部类的主要特点：
        1、外部类只能有public、default（默认）两种访问控制权限(其它的修饰还有abstract、final)，但是内部类四种权限控制符都可以使用，具体使用情况视具体语法、要求。
        2、内部类可以直接访问外部类的所有成员，包括private修饰的私有成员。【内部类存在的最大特点】
        3、外部类不能直接访问内部类的成员，必须首先建立内部类的对象，然后通过内部类对象调用才可以访问
        4、内部类可以解决一些问题，比如间接地去实现多继承，可以避免修改接口而实现同一个类中两个同名方法的调用。
        
        内部类分为：
        1、成员内部类：
                         成员内部类使用及特点：
                              （1）成员内部类是外部类的一个实例成员，也可以将成员内部类当成外部类的一个属性或方法。
                              （2）成员内部类可以有public、private、default、protected四种权限修饰符。
                              （3）在成员内部类中访问外部成员的属性和方法，要使用 “外部类.this.成员属性” 和  “外部类.this.成员方法” 的形式
                              （4）创建成员内部类的实例使用两种形式：(因为内部类是外部类的一个实例成员，所以首先要有外部类实例对象)
                     1> 外部类.内部类   实例名 = new 外部类实例.new 内部类实例。   即： Outer.Inner inner = new Outer().new Inner();
                     2> 先实例化外部类对象，再产生内部类对象
                                                        语法格式： 外部类  外部类 实例名 = 外部类实例      即： Outer  outer = new Outer();
                                                        外部类.内部类  内部类实例名 = 外部类实例名.内部类实例    即：Outer.Inner inner = outer.new Inner();
                        成员内部类使用限制：
                             （1）成员内部类不能与外部类重名
                             （2）不能在成员内部类中定义static属性、方法和类（static final 形式的常量除外）。因为一个成员内部类必然与一个外部实例关联  ，而static成员是不依赖实例对象的                                          
                        【观察：InnerClassTest1.java/InnerClassTest2.java/InnerClassTest3.java/InnerClassTest4.java】
        
        2、静态内部类：
                         静态内部类的特点：
                              （1）使用static修饰的成员内部类叫作静态内部类
                              （2）静态内部类跟外部没有任何关系，只是在生成类名和类定义时有影响。静态内部类可以看做是与外部类平级的类。使用方式与外部类平级的类完全相同。 
                              （3）创建静态内部类的实例使用  外部类.内部类   实例名 = new 外部类名.内部类名（参数）。
                         静态内部类的限制：
                              （1）静态内部类不能与外部类重名
                              （2）静态内部类不能访问外部类的非静态的属性和方法（相当于：静态的只能访问静态的）。外部类不能访问内部类的非静态的属性和方法。
                        【观察：InnerClassTest5.java】
        
        3、匿名内部类：
                         匿名内部类特点：
                              （1）匿名内部类是没有名称的内部类，没办法引用它们。必须在创建时，作为new语句的一部分来声明并创建它们的实例。
                              （2）匿名内部类必须继承一个类（抽象的、非抽象的都可以）或者实现一个接口。如果父类（或者父接口）是抽象类，则匿名内部类必须实现其所有抽象方法。
                              （3）匿名内部类可以定义代码块，用于实例的初始化，但是不能定义静态代码块。
                         匿名内部类什么时候用？
                              （1）已经知道父类，获取其子类的实例对象。
                              （2）已经知道接口，获取实现了该接口的类的对象
                         匿名内部类语法：
              new interface / superclass(){//类体}   【注意：接口、抽象类不能实例化，所以这里的new出来的是实现该接口的实现类，或者是抽象类的子类】
                        【观察：InnerClassTest6.java/InnerClassTest7.java】
        
        4、局部内部类：定义在代码块、方法体内的类
                         局部内部类的特点：
                             （1）局部内部类访问外部类的属性和方法使用 “外部类名.this.属性” 和  “外部类名.this.方法名（参数）” 的形式
                             （2）对外部世界完全隐藏，只能在其作用域内生成对象。
                         局部内部类的限制：
                            （1）局部内部类不能加访问修饰符，因为他们不是类成员。
                            （2）局部内部类不能与外部类重名。
                            （3）局部内部类访问作用域内的局部变量，该局部变量需要使用final修饰。也就是说，局部内部类只能访问其方法或代码块中声明的常量。
                       【观察：InnerClassTest8.java】
         
        
        
        