一、接口interface：
    1、接口：接口是一种标准，更多体现能干什么，具备什么能力。
                            接口是一种特殊的类。
    
    2、interface的特点：
              （1）接口是一个特殊的类，但是接口中只能存放静态变量和抽象方法（没有构造方法），且静态变量是被final修饰，就变成了全局常量  即:（public final static）
                        由于接口里面有且只有抽象方法，所有接口对象不能直接使用关键字new进行实例化的操作。所以接口是使用原则如下：
              1> 接口必须要有类来实现(可以是普通类，也可以是抽象类)，使用关键字implements来实现接口，且一个类可以实现多个接口。【观察：InterfaceTest1.java/InterfaceTest2.java】
              2> 一个抽象类只能继承一个抽象类，但是一个接口却可以继承（extends）多个接口，但是接口不能继承抽象类。接口不能使用关键字extends被继承【观察：InterfaceTest3.java】        
              （2）接口是对功能的拓展。 
                        类和抽象类一般是存放通用的属性和方法，而interface中存放的是拓展性、选择性的方法。
              （3）通过实现接口，java类可以实现多实现：一个类（包括抽象类）只能继承一个类，但可以实现多个接口。
              （4）接口可以继承接口   即：interface1 extends interface2
              
    3、接口和抽象类的区别：
              （1）抽象类和具体实现类之间是一种继承关系（is-a），也就是说如果采用抽象类的方式，则父类和子类在概念上应该是相同的。
              （2）接口和实现类在概念上不要求相同，接口只是抽取相互之间没有关系的类的共同特征，而不去关注类之间的关系，他可以使没有层次关系的类具有相同的行为。
              （3）抽象类是对一组具有相同属性和行为的逻辑上有关系的事物的一种抽象，而接口则是对一组具有相同属性和行为的逻辑上不想管的事物的一种抽象。
              （4）接口中不能含有静态代码块以及静态方法，而抽象类可以有静态代码块和静态方法；    
              
              
              接口在实际的开发之中有三大核心作用：
              1、定义不同层之间的操作标准：
                                       范例：U盘、打印机能够插入电脑，就是因为电脑上有USB插口，USB就定义了一个操作标准，电脑、U盘这两个层次就通过USB实现不同层之间的操作【观察：InterfaceTest8.java】
              2、表示一种操作的能力
              3、表示将服务器端的远程方法视图暴露给客户端。
              
              接口的应用——工厂设计模式（Factory）：工厂设计模式的的意图：提供一个类，由Factory负责根据一定的条件创建某一具体类的实例。
              【观察：InterfaceTest9.java】 可以发现每一次得到新的对象，都需要new一下，而这就是耦合度太高，耦合度太高的直接问题就是代码不方便维护，就相当于A一直要要与B绑定在一起。
              为此解决的办法是增加一个过渡：Factory模式 【】
              
              
              接口中很多的方法，但是我们只想要继承重写其中的个别方法，这样怎么办呢？这时就需要定义一个适配器类来实现接口【观察：InterfaceTest7.java】
              这种缺省适配器类（类中没有抽象方法，所以称为缺省适配器类）一般都是abstract的，明确指定不需要对象
              
              
              抽象类与接口的区别：
      NO      区别                                                           抽象类                                                                                                               接口
      1.    声明关键字                                      abstract class                                          					interface
      2.      组成                                             构造方法、普通方法、抽象方法、static方法、变量、常量                         			抽象方法、全局常量
      3.    子类使用上                                      class 子类 extends 抽象类                                                                            		class 子类 implements 接口1，接口2，...
      4.      关系                                             抽象类可以实现多个接口                                                                                       		接口不能继承抽象类，却可以继承父接口
      5.      权限                                             抽象类可以使用各种权限                                                                                       		只能使用public权限
      6.      限制                                             单继承局限                                                                                                               	没有单继承局限
      7.      子类                                             抽象类和接口都必须要有子类，子类必须要重写全部的抽象方法（相同点）                                                    
      8.    实例化对象                                       依靠子类对象的向上转型进行对象的实例化（相同点）                 
      
              
              
              
              
              
              
              
              
              
              