一、异常Exception：
     
     1、异常：异常是指在程序运行期（命令行中java后，而不是javac）发生的事件。如：用户的坏数据、试图打开一个根本不存在的文件等。
     
     2、异常导致的后果：
           java程序的执行过程中如果出现异常事件，可以生成一个异常类对象，该异常对象封装了异常事件的信息，
                  并将其提交给java运行时系统，这个过程称为抛出异常，不处理的话会直接导致程序直接中断。
                【注意：一旦产生异常，就一定会产生异常对象】
                
     3、异常层次结构图：
        Throwable分为两类：（Throwable是所有异常类的根类）
           1、Error（系统级）：Error类及其子类用来描述java运行系统的内部错误以及耗尽资源的错误，因为这不是程序本身的问题，所以程序也不对其做任何处理。也就是说Error是程序无法控制的。
           2、Exception（程序级）：分为两类
           		1> RunTimeException：此类为java程序经常发生的异常，故而JVM会自动对其进行处理，能够通过编译（当然也能自己捕获）,运行时会报错。
           		2> 非RunTimeException：此类异常不能被JVM自动处理，若是自己不做捕获处理，编译都无法通过。
     4、java异常处理机制：
        1、捕获：try-catch-finally
           try{}: try语句块存放的是可能发生异常的java语句。
           catch（异常类型  异常对象）{}: catch语句块是当java运行时系统接收到try块中所抛出异常对象时，会寻找能处理这一异常catch块来进行处理（可以有多个catch块）
           finally: 无论是否发生异常，finally语句块中的语句都会执行，一般用来释放资源。
                                               而在以下四种特殊情况下，finally块不会被执行：
                     1> 在finally语句块中发生了异常。
                     2> 在前面的代码中使用了System.exit()退出程序
                     3> 程序所在的线程死亡
                     4> 关闭CPU
        2、抛出：throw、throws
           throw：throw用于手动抛出异常。作为程序员可以在任意位置手动抛出异常。
           throws：throws用于在方法上表示要暴露的异常。抛出的异常交由调用者处理。【当方法后throws异常，表明告诉他人这个方法中的语句存在异常，必须要进行处理】
                        【1、当方法中出现的异常是非RunTimeException，那么必须将此异常throws给调用方法者（否则无法通过编译）。而调用方法者就需要在方法中对其进行捕获。】
                        【2、当方法中出现的异常是RunTimeException，此方法上可以声明该异常,也可以不声明该异常】
                        【观察：ExceptionTest9.java】
                        
                        【注意：当子类重写父类方法的时候，不能throws比父类更大的异常，除非throws的异常是RunTimeException】
                        【观察：ExceptionTest10.java】
                        
                         重要的代码模型：异常的使用格式
                       【ExceptionTest11.java】
     
     5、 Exception有下面3个常用方法来获取异常的具体有关信息（子类都有）：
           1、getMessage():输出错误信息
           2、toString():给出异常的类型和性质
           3、printStackTrace()：指出异常的类型、性质、栈层次及出现在程序中的位置。
     6、自定义异常：
        java提供的异常体系不可能预见所有希望加以报告的错误。
                  自定义异常必须从已有的异常类继承。（最多的是从Exception类继承）
                  建立新的异常类型最简单的方法就是让编译器默认构造方法。
                  对异常来说，最重要的部分就是它的类名。
     7、为什么在方法体内都定义了 throw new XxxException();有的方法还需要在方法上声明 throws XxxException?
     	解释:
     	1). 若是在方法体内抛出的不是一个运行时异常，那么就要在方法上声明该异常。                   
     	2). 若是在方法体内抛出的是一个运行时异常，那么既可以在方法声明该异常，也可以省虐不声明。
     
           
          
           
           assert关键字：其主要的功能是进行断言
           
        