一、继承：
      1、继承性的最大特征是解决代码的重用问题。父类也叫基类，超类。   子类也叫派生类。
                            观察 JiChengTest.java：
                            这里Student类继承Person类，就继承了Person类的全部属性(包括private修饰的属性)和方法（包括private修饰的方法）。当然子类也可以继续补充属性和方法。
            Student类中并没有name、age属性，但是在主方法中能够set、get name、age，这就是因为Student类继承了Person类，就继承了其属性和方法。
                            但是因为name、age 是private修饰，所以是隐式继承（没有用private修饰的继承是显示继承），就相当于只有继承权，而没有直接使用权。
                            所以这里不能直接用stu.name，stu.age来直接访问，而是要用set、get方法。
                            
      2、继承的限制：
                    利用extends关键字，大部分情况下不用考虑继承的限制（前提是按照标准格式开发），但是由于要限制用户的使用，所以针对于继承也有一些自己的要求。
        (1)java不允许多重继承，可以多层继承：          多重继承：即一个子类继承多个父类。   
                            观察JiChengTest2.java，观察多重继承与多层继承（多层继承的层数虽然没有限制，但是最好不要太多层，就像是多人传话一样，层数多了容易出错。）。
        (2)子类在继承父类的时候严格来讲会继承父类中的全部操作，但是对于所有的私有操作属于隐式继承（就像是只有所有权，而没有直接使用权），
                          而对于所有的非私有操作，属于显示继承（既有所有权，也有直接使用权）。
                          观察JiChengTest3.java
        (3)在子类对象构造之前一定会默认调用父类的构造（构造方法是不被继承的，默认使用无参构造），以保证父类对象先实例化，而后实例化子类对象（若是没有父类对象，子类又从哪里继承呢？）
                         观察JiChengTest4.java  
                         上面的例子中，对于子类构造而言，就相当于隐含了一个super（），写不写出来都是一样。
                         但是当父类中没有无参构造方法时（没有无参构造方法，则必定有带参数的构造方法），那么就必须使用super（）明确调用父类的有参构造方法。且super（）中也是带有参数的。
                         观察JiChengTest5.java    
     3、初始化顺序：
                  观察JiChengTest6.java
                  可以发现有父类、子类时候的初始化顺序：
           1、先父类静态，然后子类静态 （跟创建对象无关，只要用到类就会加载其静态属性，并且只加载一次）
           2、父类的定义初始化块，父类的构造方法
           3、子类的定义初始化块，子类的构造方法
        
        
  
   （*）重点注意：
      1、有人说子类没有继承父类的私有属性和方法，只继承了非私有的属性和方法；也有人说，子类继承了父类的私有属性和方法，但是不能直接使用，要通过set、get方法间接使用。
     		答：使用debug就可以看见,子类是继承了
      2、子类继承父类，是复制一份父类对象内容？还是引用父类对象？
                    如果直接复制一份，为什么不能直接使用私有属性和方法？
   	           如果是引用父类对象，为什么能够直接使用非私有属性和方法，而不需要引用？
                         